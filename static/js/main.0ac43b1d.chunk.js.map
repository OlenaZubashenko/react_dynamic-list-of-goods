{"version":3,"sources":["helpers/api.tsx","components/GoodsList/GoodsList.tsx","App.tsx","index.tsx"],"names":["getGoods","fetch","then","response","a","delay","json","ms","Promise","resolve","setTimeout","GoodList","goods","map","good","key","id","style","color","name","App","state","isLoading","_getData","dataReceiver","setState","finally","showAllGoods","goodsFromServer","showFiveGoods","sort","b","localeCompare","splice","showRedGoods","filter","this","Spinner","size","GoodsList","Button","outline","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oTAIaA,EAAW,WAEtB,OAAOC,MAAM,GAAD,OAJE,kCAIF,4CACDC,KADJ,uCACU,WAAMC,GAAN,SAAAC,EAAA,sEAGCC,EAAM,KAHP,gCAIEF,EAASG,QAJX,2CADV,wDAST,SAASD,EAAME,GACb,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,MCTpD,IAYeI,EAZkC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClD,OACE,4BACGA,EAAMC,KAAI,SAACC,GAAD,OACT,wBAAIC,IAAKD,EAAKE,GAAIC,MAAS,CAACC,MAAM,GAAD,OAAIJ,EAAKI,SACvCJ,EAAKK,W,wBCHKC,E,4MACnBC,MAAQ,CACNT,MAAO,GACPU,WAAW,G,EAGbC,SAAW,SAACC,GACV,EAAKC,SAAS,CACZH,WAAW,IAEbE,IAAeE,SAAQ,WACrB,EAAKD,SAAS,CACZH,WAAW,Q,EAIjBK,aAAe,WACd,OAAO3B,IACHE,MAAK,SAAC0B,GACL,EAAKH,SAAS,CACZb,MAAOgB,Q,EAKfC,cAAgB,WACf,OAAO7B,IACHE,MAAK,SAAA0B,GACJ,EAAKH,SAAS,CACZb,MAAO,YAAIgB,GACRE,MAAK,SAAC1B,EAAU2B,GAAX,OAAyB3B,EAAEe,KAAMa,cAAcD,EAAEZ,SACtDc,OAAO,EAAG,S,EAKrBC,aAAe,WACd,OAAOlC,IACHE,MAAK,SAAC0B,GACL,EAAKH,SAAS,CAAEb,MAAOgB,EAAgBO,QAAO,SAACrB,GAAD,MAAgC,QAAfA,EAAKI,e,uDAMhE,IAAD,SACsBkB,KAAKf,MAA1BT,EADD,EACCA,MACR,OAFO,EACQU,UAEN,8CAAmB,kBAACe,EAAA,EAAD,CAASC,KAAK,KAAKpB,MAAM,eAInD,oCACE,qDACA,kBAACqB,EAAD,CAAW3B,MAAOA,IAClB,kBAAC4B,EAAA,EAAD,CAAQC,SAAO,EAACvB,MAAM,OACpBwB,KAAK,SACLC,QAAS,kBAAK,EAAKpB,SAAS,EAAKI,gBAFnC,YAMA,kBAACa,EAAA,EAAD,CAAQC,SAAO,EAACvB,MAAM,UACpBwB,KAAK,SACLC,QAAS,kBAAK,EAAKpB,SAAS,EAAKM,iBAFnC,gBAMA,kBAACW,EAAA,EAAD,CAAQC,SAAO,EACbvB,MAAM,SACNwB,KAAK,SACLC,QAAS,kBAAK,EAAKpB,SAAS,EAAKW,gBAHnC,sB,GAnEyBU,IAAMC,W,MCJvCC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.0ac43b1d.chunk.js","sourcesContent":["import { IGood } from \"../models/IGood\";\n\nconst API_URL = 'https://mate-academy.github.io/';\n\nexport const getGoods = (): Promise<IGood[]> => {\n\n  return fetch(`${API_URL}/react_dynamic-list-of-goods/goods.json`)\n            .then( async response => {\n\n              //L-o-o-o-o-o-o-o-o-o-n-g response time emulation:\n              await delay(1 * 1000);\n              return response.json()\n            });\n};\n\nfunction delay(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import React from 'react';\nimport { IGood } from '../../models/IGood'\n\ntype Props = {\n  goods: IGood[];\n}\n\nconst GoodList: React.FunctionComponent<Props> = ({ goods }) => {\n  return (\n    <ul>\n      {goods.map((good: IGood) => (\n        <li key={good.id} style = {{color:`${good.color}`}}>\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  )\n};\n\nexport default GoodList;\n","import React from 'react';\nimport { getGoods } from './helpers/api';\nimport GoodsList from './components/GoodsList/GoodsList';\nimport './App.css';\nimport { IGood } from './models/IGood';\nimport { Button } from 'reactstrap';\nimport { Spinner } from 'reactstrap';\n\n\nexport default class App extends React.Component {\n  state = {\n    goods: [],\n    isLoading: false\n  }\n\n  _getData = (dataReceiver:() => Promise<any>):any => {\n    this.setState({\n      isLoading: true\n    });\n    dataReceiver().finally(()=>{\n      this.setState({\n        isLoading: false\n      });\n    });\n  }\n  showAllGoods = (): Promise<void> => {\n   return getGoods()\n      .then((goodsFromServer) => {\n        this.setState({\n          goods: goodsFromServer as IGood[]\n        });\n      });\n  };\n\n  showFiveGoods = () => {\n   return getGoods()\n      .then(goodsFromServer => {\n        this.setState({\n          goods: [...goodsFromServer]\n            .sort((a: IGood, b: IGood) => (a.name).localeCompare(b.name))\n            .splice(0, 5),\n        });\n      });\n  };\n\n  showRedGoods = () => {\n   return getGoods()\n      .then((goodsFromServer) => {\n        this.setState({ goods: goodsFromServer.filter((good: IGood) => good.color === 'red') });\n      });\n  };\n\n\n\n  render() {\n    const { goods, isLoading } = this.state;\n    if (isLoading) {\n      return <p> Is loading ... <Spinner size=\"sm\" color=\"secondary\" /></p>\n    }\n\n    return (\n      <>\n        <h1>Dynamic list of Goods</h1>\n        <GoodsList goods={goods} />\n        <Button outline color=\"info\"\n          type=\"button\"\n          onClick={()=> this._getData(this.showAllGoods)}\n        >\n          Load all\n        </Button>\n        <Button outline color=\"success\"\n          type=\"button\"\n          onClick={()=> this._getData(this.showFiveGoods)}\n        >\n          Load 5 goods\n        </Button>\n        <Button outline\n          color=\"danger\"\n          type=\"button\"\n          onClick={()=> this._getData(this.showRedGoods)}\n        >\n          Load only red\n        </Button>\n      </>\n    )\n  }\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}